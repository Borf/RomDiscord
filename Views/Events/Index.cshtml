@{
    @model RomDiscord.Models.Pages.Events.Index;
}

@{
    var dt = new DateTime(Model.Year, Model.Month, 1);
    var prefixDays = (((int)dt.DayOfWeek - (int)DayOfWeek.Monday)+7)%7;
    var next = dt.AddMonths(1);
    var prev = dt.AddMonths(-1);
    var daysInMonth = DateTime.DaysInMonth(Model.Year, Model.Month);

    var eventChannel = Model.Channels.FirstOrDefault(c => c.Id == Model.Settings.Channel);
}
<div class="container border border-secondary p-3 mb-3">
    <h2>Settings</h2>
    <form asp-action="ChangeSettings" method="post">
        <div class="form-group">
            <label>Enabled</label><br/>
            <input type="checkbox" @(Model.Settings.Enabled ? "checked" : "") class="" name="Enabled" value="true">
        </div>
        <div class="form-group">
            <label>Channel</label>
            <select name="Channel" class="form-control custom-select">
            @foreach(var channel in Model.Channels.Where(c => c is Discord.WebSocket.SocketGuildChannel).OrderBy(c => c.Position))
            {
                <!option @(channel.Id == Model.Settings.Channel ? "selected": "") value="@channel.Id">@channel.Name</!option>
            }
            </select>
        </div>
        <div class="form-group">
            <label>Save</label>
            <input class="btn btn-primary form-control" type="submit" value="Save" />
        </div>

    </form>
</div>


<div class="d-flex justify-content-between">
    <div><a asp-route-year="@prev.Year" asp-route-month="@prev.Month" class="btn btn-primary">Previous</a></div>
    <div><h2>Events for @(new DateTime(Model.Year, Model.Month, 1).ToString("MMM")) @Model.Year</h2></div>
    <div><a asp-route-year="@next.Year" asp-route-month="@next.Month" class="btn btn-primary">Next</a></div>
</div>
<table class="table table-dark table-bordered">
    <tr>
        <td>Monday</td>
        <td>Tuesday</td>
        <td>Wednesday</td>
        <td>Thursday</td>
        <td>Friday</td>
        <td>Saturday</td>
        <td>Sunday</td>
    </tr>
    <tr>
        @for(var i = 0; i < prefixDays; i++)
        {
            <td></td>
        }
        @for(int day = 1; day <= daysInMonth; day++)
        {
            DateTime date = new DateTime(Model.Year, Model.Month, day);
            bool isToday = date.Date == DateTime.Now.Date;
            <td class="@(isToday ? "bg-primary" : "")">
                <a asp-action="New" asp-route-day="@date.Day" asp-route-month="@date.Month" asp-route-year="@date.Year" class="btn btn-primary btn-sm p-1" style="float: right"><span style="height: 14px; width: 14px" class="p-0 m-0" data-feather="plus-circle"></span></a><h2>@date.Date.Day</h2>
                <ul class="list-group list-group-flush">
                    @foreach(var e in Model.GetEvents(date))
                    {
                        <li class="list-group-item bg-dark text-white p-0">
                            @if(e.DiscordGuildEvent)
                            {
                                <span style="float: right;" class="badge bg-primary"><img height="14" src="/img/discord.svg" class="p-0 m-0"></span>
                            }
                            @if(eventChannel != null && eventChannel.GetMessageAsync(e.DiscordMessageId) != null)
                            {
                                <span data-title="Message OK" style="float: right;" class="badge bg-danger p-1" data-feather="hash" title="Discord message OK"></span>
                            }
                            else
                            {
                                <span data-toggle="tooltip" style="float: right;" class="badge bg-primary p-1" data-feather="hash" title="Discord message NOT ok"></span>
                            }
                            @if(e.Repeats && e.RepeatTime != TimeSpan.Zero)
                            {
                                <span style="float: right;" class="badge bg-warning p-1 text-black" data-feather="clock"></span>
                            }
                            <a asp-action="Edit" asp-route-eventid="@e.EventId" class="btn btn-sm text-white p-0 bg-secondary">@e.Name</a>
                        </li>
                    }
                </ul>
            </td>
            @if (date.DayOfWeek == DayOfWeek.Sunday)
            {
                @Html.Raw("</tr><tr>")
            }
        }
    </tr>

</table>
